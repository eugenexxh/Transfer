50. Pow(x, n)

class Solution {
public:
    double myPow(double x, int n) {
        double res = 1.0;
		
        for(int i=n; i!=0; i/=2)                //死记硬背吧
        {
            if(i%2 != 0) res *= x;       //如果是奇数，多此一步			
            x *= x;                      //不论奇偶，都会有此一步
        }
        
        return n<0 ? 1/res : res;        
    }
};

*******************************************************************************

69. Sqrt(x)

class Solution {                            //二分法，找最后一个不大于目标值的数
public:
    int mySqrt(int x) {
        if(x<=1) return x;                  //不可少
		
        int left=0, right=x;
        while(left < right)                 //退出循环的条件，不断改变left和right的值
        {
            int mid = left + (right-left)/2;         
            if(x/mid >= mid) left = mid+1;           //这里关键的是if()语句里面的内容
            else right = mid;
        }
        
        return right-1;        
    }
};


/*
int mid = left + (right-left)/2; 这样写可以防止溢出；
因为 left+right 可能会超过取值范围；
*/
