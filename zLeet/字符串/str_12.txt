38. Count and Say                   

class Solution {
public:
    string countAndSay(int n) {
        string res="1";
		
        while(--n)                               //--n放在while，考虑到n为1
        {
            string out="";                          //out不能与res同级			
            for(int i=0; i<res.size(); ++i)
            {
                int cnt=1;
                while(i+1<res.size() && res[i+1]==res[i])
                {
                    ++cnt;
                    ++i;        //不能少
                } 
				
                out += to_string(cnt) + res[i];
            } 
			
            res=out;
        }    
		
        return res;
    }
};

*******************************************************************************************************

271. Encode and Decode Strings 

/*
a  ab  abc
1/a2/ab3/abc
*/

法一：
class Codec {
public:
    // Encodes a list of strings to a single string.
    string encode(vector<string>& strs)
	{
	    string res="";
		for(auto a : strs)
		{
		    res.append(to_string(a.size())).append("/").append(a);      //a.size()要使用to_string
		}                                                               //a.append("/")正确，a.append('/')错误
		                                                                //res.append("/0")正确，res.append('/0')错误
		return res;                                                     //res += (a + "/0")正确， res += (a + '/0')错误
    }
	
    // Decodes a single string to a list of strings.
    vector<string> decode(string s)
	{
	    vector<string> res;
		int i=0;
		
		while(i<s.size())
		{
		    auto pos=s.find("/", i);                                 
			int len=stoi(s.substr(i, pos-i));          //s.substr(idx, len)  第二个参数是长度，不是序位。不要写成pos-1.
			string out=s.substr(pos+1, len);          //表示长度的数可能不是个位数，也与可能是两位数、三位数，所以要用s.substr(idx, len)
			res.push_back(out);
			
			i=pos+len+1;        //不要忘记这一步，否则会进入死循环
		}
		
		return res;
    }
};



法二：（看一下sstream的用法）
class Codec {
public:
    // Encodes a list of strings to a single string.
    string encode(vector<string>& strs)
	{
	    string res;
		for(auto a : strs)
		{
		    res.append(a).append("$");                            //append (const string& str);        
		}                                                  
		
		return res;
    }
	
    // Decodes a single string to a list of strings.
    vector<string> decode(string s）
	{
	    stringstream ss(s);
		string t;
		while(getline(ss, t, '$'))          //getline (istream&  is, string& str, char delim)
		{                                  //geline第三个参数是char，所以getline(ss,t,'/0')总是报错，应为getline(ss,t,'\0')
		    res.push_back(t);              //即使换成getline(ss, t, '\0')结果也不理想
		}
		
		return res;	    
    }
};                                        //博主的法二在vs中是错的



