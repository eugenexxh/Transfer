43. Multiply Strings

class Solution {
public:
    string multiply(string num1, string num2) {
        int n1=num1.size(), n2=num2.size();
        int k=n1+n2-2;
        vector<int> v(n1+n2,0);                    //注意vector声明时的初始化
		
        for(int i=0; i<n1; ++i)                             //1. 完成粗糙的两数相乘
        {
            for(int j=0; j<n2; ++j)
            {
                v[k-i-j] += (num1[i]-'0') * (num2[j]-'0');
            }
        }
        
        int carry=0;                                       //2. 完成进位（从前往后）
        for(int i=0; i<n1+n2; ++i)
        {
            int sum=v[i]+carry;
            carry=sum/10;
            int num=sum%10;
            
            v[i]=num;
        }
        
        int p=n1+n2-1;                                     //3. 指针指向非0的最后一位
        while(p>0 && v[p]==0) --p;                                 //p>0很重要，不能少，不然会出现数组越界
        if(p<0) return "0";
        
        string res;
        while(p>=0)                                       //4. 进行整合（从后往前）
        {
            res += to_string(v[p]);                             //当前的v[p]跟在res后面
			--p;                                                //--p不能少，否则出不了循环
        }
        return res;

    }
};

/*   123 x 456 = 56088

1    2    3
4    5    6
-------------------
?    ？   ？

V:   0      1      2      3      4      5
                   1x6     1x5    1x4
		    2x6    2x5     2x4
	 3x6    3x5    3x4
=============================================
     18     27     28      13     4     0
---------------------------------------------
      8      8      0       6     5     0
*/
