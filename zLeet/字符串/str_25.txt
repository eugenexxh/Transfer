151. Reverse Words in a String         //首尾之间可能有多个空格，单词之间可能有多个空格

class Solution {
public:
    string reverseWords(string s) {
        stringstream ss(s);       
        string tmp;
        string res;
        ss>>res;                         //这样可以无视头部的空格
        
        while (getline(ss, tmp, ' '))
        {
            if (tmp.empty()) continue;     //getline每次只能过一个空格字符，如果多个空字符连在一起，tmp就会被赋为空，因此要判断
            res = tmp + " " + res;
        }
        
        return res;        
    }
};

/*
the_sky_is_blue
如果不事先将ss>>res，结果会变为：
blue_is_sky_the_
*/

字符串流 istringstream 与 ostringstream
https://blog.csdn.net/AC_huang/article/details/39899419

*****************************************

186. Reverse Words in a StringII          //首尾之间没有空格，单词之间只有一个空格

class Solution {
public:
    string reverseWords(vector<char>& s) {                                                           
	    reverse(s.begin(), s.end());                          
		                                                     
		for(int i=0, j=0; i<s.size(); i=j+1)                 
		{
		    for(j=i; j<s.size(); ++j)                       
			{
			    if(s[j]==' ') break;                //因为是break退出循环的，所以不会再执行++j了
			}			
			reverse(s.begin()+i, s.begin()+j);     //i表示单词的首字母，j表示单词末尾的空格
		}
		
		return s;
    }
};

//reverse函数用于反转在[first,last)范围内的顺序

/*
1. 先翻转整个字符串
2. 再翻转每个单词
*/

